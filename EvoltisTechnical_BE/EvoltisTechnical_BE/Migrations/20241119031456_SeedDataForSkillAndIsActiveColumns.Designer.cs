// <auto-generated />
using System;
using EvoltisTechnical_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvoltisTechnical_BE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241119031456_SeedDataForSkillAndIsActiveColumns")]
    partial class SeedDataForSkillAndIsActiveColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EvoltisTechnical_BE.Models.Entities.ProgrammerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Programmers");
                });

            modelBuilder.Entity("EvoltisTechnical_BE.Models.Entities.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4364),
                            IsActive = true,
                            LastUpdatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4383),
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4386),
                            IsActive = true,
                            LastUpdatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4386),
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4387),
                            IsActive = true,
                            LastUpdatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4388),
                            Name = "Python"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4389),
                            IsActive = true,
                            LastUpdatedAt = new DateTime(2024, 11, 19, 0, 14, 56, 246, DateTimeKind.Local).AddTicks(4389),
                            Name = "SQL"
                        });
                });

            modelBuilder.Entity("ProgrammerEntitySkillEntity", b =>
                {
                    b.Property<int>("ProgrammerEntityId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ProgrammerEntityId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ProgrammerSkills", (string)null);
                });

            modelBuilder.Entity("ProgrammerEntitySkillEntity", b =>
                {
                    b.HasOne("EvoltisTechnical_BE.Models.Entities.ProgrammerEntity", null)
                        .WithMany()
                        .HasForeignKey("ProgrammerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvoltisTechnical_BE.Models.Entities.SkillEntity", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
